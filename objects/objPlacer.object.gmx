<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlacer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
placeIndex = 0;
my_alpha = 0.3
start_x = 0;
start_y = 0;
end_x = 0;
end_y = 0;
draw_placement = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (placeIndex &gt; 0) {placeIndex--;}
else {placeIndex = 3;}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>placeIndex++;
if (placeIndex &gt; 3) {placeIndex = 0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create blocks
draw_placement = false;
if (placeIndex != 3) {
    var n, m, step_i = 1, step_j = 1, i, j;
    n = floor(abs((end_x - start_x) / 32));
    m = floor(abs((end_y - start_y) / 32));
    if (start_x &gt; end_x) {
        step_i = -1;
    }
    if (start_y &gt; end_y) {
        step_j = -1;
    }
    for (i = 0; i &lt;= n; i++) {
        for (j = 0; j &lt;= m; j++) {
            instance_create(start_x + (step_i * i * 32), start_y + (step_j * j * 32), objDelete);
            instance_create(start_x + (step_i * i * 32), start_y + (step_j * j * 32), placeables[placeIndex,1]);
        }
    }
}
else {
    if (instance_exists(objRobot)) {
        with (objRobot) {
            instance_destroy();
        }
    }
    instance_create(end_x, end_y, objDelete);
    instance_create(end_x + 16, end_y + 16, objRobot);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin drawing placement
draw_placement = true;
start_x = (mouse_x) - ((mouse_x) % 32);
start_y = (mouse_y) - ((mouse_y) % 32);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Placer and Placeable
x = mouse_x - (mouse_x % 32);
y = mouse_y - (mouse_y % 32);

draw_sprite_ext(sprite_index, image_index, mouse_x, mouse_y, 1, 1, 0, c_white, my_alpha);
if (placeIndex == 3) {
    draw_sprite_ext(placeables[placeIndex,0], 0, x+16, y+16, 1, 1, 0, c_white, 0.7);
}
else {
    draw_sprite_ext(placeables[placeIndex,0], 0, x, y, 1, 1, 0, c_white, 0.7);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw placement
if (draw_placement) {
    end_x = x; // mouse_x + 32 - ((mouse_x + 32) % 32);
    end_y = y; //mouse_y + 32 - ((mouse_y + 32) % 32);
    var ccc = draw_get_color(), aaa = draw_get_alpha();
    draw_set_color(c_red);
    draw_set_alpha(0.5);
    var sxb = 0, syb = 0, exb = 32, eyb = 32;
    if (start_x &gt; end_x) {
        sxb = 32;
        exb = 0;
    }
    if (start_y &gt; end_y) {
        syb = 32;
        eyb = 0;
    }
    draw_rectangle(start_x + sxb, start_y + syb, end_x + exb, end_y + eyb, 0);
    draw_set_color(ccc);
    draw_set_alpha(aaa);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
